// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("text")
                        .HasComputedColumnSql("CASE WHEN \"CodeWithoutId\" IS NULL THEN \"Id\"::varchar(10) WHEN \"Id\"::varchar(10)  IS NULL THEN \"CodeWithoutId\" ELSE \"CodeWithoutId\" || \"Id\"::varchar(10) END", true);

                    b.Property<string>("CodeWithoutId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PalletId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PalletId");

                    b.ToTable("Boxes", (string)null);
                });

            modelBuilder.Entity("Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoxId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BoxId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("Domain.Pallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("text")
                        .HasComputedColumnSql("CASE WHEN \"CodeWithoutId\" IS NULL THEN \"Id\"::varchar(10) WHEN \"Id\"::varchar(10)  IS NULL THEN \"CodeWithoutId\" ELSE \"CodeWithoutId\" || \"Id\"::varchar(10) END", true);

                    b.Property<string>("CodeWithoutId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pallets", (string)null);
                });

            modelBuilder.Entity("Domain.Box", b =>
                {
                    b.HasOne("Domain.Pallet", "Pallet")
                        .WithMany("Boxes")
                        .HasForeignKey("PalletId");

                    b.Navigation("Pallet");
                });

            modelBuilder.Entity("Domain.Item", b =>
                {
                    b.HasOne("Domain.Box", "Box")
                        .WithMany("Items")
                        .HasForeignKey("BoxId");

                    b.Navigation("Box");
                });

            modelBuilder.Entity("Domain.Box", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Domain.Pallet", b =>
                {
                    b.Navigation("Boxes");
                });
#pragma warning restore 612, 618
        }
    }
}
